apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'

android {
    compileSdkVersion 29
    buildToolsVersion "29.0.2"
    defaultConfig {
        applicationId "com.oluwafemi.mobcategories"
        minSdkVersion 21
        targetSdkVersion 29
        versionCode 1
        versionName "1.0"
        buildConfigField 'String', "BASE_URL", BASE_URL
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility 1.8
        targetCompatibility 1.8
    }
    kotlinOptions { jvmTarget = "1.8"}
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation"org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation "androidx.appcompat:appcompat:$appcompat_version"
    implementation "androidx.constraintlayout:constraintlayout:$constraintlayout_version"
    implementation "androidx.recyclerview:recyclerview:$recyclerview_version"
    implementation "androidx.lifecycle:lifecycle-extensions:$lifecycle_version"
    implementation "com.google.android.material:material:$material_version"
    implementation "androidx.navigation:navigation-fragment-ktx:$nav_version"
    implementation "androidx.navigation:navigation-ui-ktx:$nav_version"
    implementation "androidx.fragment:fragment:$fragment_version"

    // dagger core
    implementation "com.google.dagger:dagger:$dagger_2_version"
    kapt "com.google.dagger:dagger-compiler:$dagger_2_version"

    // dagger android
    implementation "com.google.dagger:dagger-android:$dagger_2_version"
    implementation "com.google.dagger:dagger-android-support:$dagger_2_version"
    kapt "com.google.dagger:dagger-android-processor:$dagger_2_version"

    // Rx
    implementation "io.reactivex.rxjava2:rxjava:$rx_java2_version"
    implementation "io.reactivex.rxjava2:rxandroid:$rx_android_version"

    // gson
    implementation "com.google.code.gson:gson:$gson_version"

    // Retrofit
    implementation "com.squareup.retrofit2:retrofit:$retrofit_version"
    implementation "com.squareup.retrofit2:adapter-rxjava2:$rx_java_adapter_version"
    implementation "com.squareup.retrofit2:converter-gson:$retrofit_version"

    // okhttp
    implementation "com.squareup.okhttp3:okhttp:$okhttp_version"
    implementation "com.squareup.okhttp3:logging-interceptor:$okhttp_version"

    // Glide
    implementation "com.github.bumptech.glide:glide:$glide_version"

    // Test
    testImplementation "junit:junit:$junit_version"
    testImplementation "org.mockito:mockito-inline:$mockito_version"
    testImplementation "androidx.arch.core:core-testing:$core_testing_version"
    testImplementation("com.nhaarman:mockito-kotlin:$mockito_kotlin_version") {
        exclude group: 'org.jetbrains.kotlin', module: 'kotlin-stdlib'
    }

    // androidTest
    androidTestImplementation "androidx.test.ext:junit:$junit_ext_version"
    androidTestImplementation "androidx.test.espresso:espresso-core:$espresso_version"
    androidTestImplementation "androidx.test.espresso:espresso-contrib:$espresso_version"
    implementation "androidx.test:rules:$test_rules"
    implementation "androidx.test:runner:$test_rules"
    implementation "androidx.test:core:$test_rules"
    debugImplementation "androidx.fragment:fragment-testing:$fragment_version"

}
